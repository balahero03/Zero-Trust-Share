name: Deploy AWS Infrastructure

on:
  push:
    branches: [main, develop]
    paths: ['aws/**']
  pull_request:
    branches: [main]
    paths: ['aws/**']

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: aws/package-lock.json

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          cd aws
          npm ci

      - name: Install Lambda dependencies
        run: |
          cd aws/lambda
          npm ci

      - name: Run tests
        run: |
          cd aws
          npm test

      - name: Run CDK synth
        run: |
          cd aws
          cdk synth

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: aws/package-lock.json

      - name: Install dependencies
        run: |
          cd aws
          npm ci

      - name: Run security audit
        run: |
          cd aws
          npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          file: aws/package.json

  deploy-staging:
    name: Deploy to Staging
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: aws/package-lock.json

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          cd aws
          npm ci

      - name: Install Lambda dependencies
        run: |
          cd aws/lambda
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to staging
        run: |
          cd aws
          cdk deploy --require-approval never --context environment=staging

      - name: Run integration tests
        run: |
          cd aws
          npm run test:integration

  deploy-production:
    name: Deploy to Production
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: aws/package-lock.json

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          cd aws
          npm ci

      - name: Install Lambda dependencies
        run: |
          cd aws/lambda
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to production
        run: |
          cd aws
          cdk deploy --require-approval never --context environment=production

      - name: Run smoke tests
        run: |
          cd aws
          npm run test:smoke

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          cd aws
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Cleanup failed deployments
        run: |
          cd aws
          cdk destroy --force --context environment=staging
        if: failure()
